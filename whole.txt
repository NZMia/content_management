name: CI/CD Workflow

on:
  push:
    branches: 
      - 'main'
      - 'week_*'
    tags:
      - 'v*'
  pull_request:
    branches: 
      - 'main'
      - 'week_*'

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

      - name: Run format check
        run: npm run format
      
      - name: Run unit test
        run: npm run test

      - name: Check commit message
        uses: wagoid/commitlint-github-action@v6
        with:
          config: 'commitlint.config.cjs'

      - name: Create success file
        if: ${{ success() }}
        run: echo "CI passed" > ci-success.txt

      - name: Upload CI success artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: ci-success
          path: ./ci-success.txt 

  deploy-preview:
    needs: build
    runs-on: ubuntu-latest
    if: ${{ needs.build.result == 'success' && github.ref != 'refs/heads/main' }}
    
    steps:
      - uses: actions/checkout@v4

      - name: Download CI success artifact
        uses: actions/download-artifact@v4
        with:
          name: ci-success

      - name: Check CI success
        run: test -f ci-success.txt

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --token=${{ secrets.VERCEL_TOKEN }}

      - name: Deploy to Vercel Preview
        run: vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }}

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/v'))
    
    steps:
      - uses: actions/checkout@v4
      - name: Download CI success artifact
        uses: actions/download-artifact@v4
        with:
          name: ci-success
      - name: Check CI success
        run: test -f ci-success.txt

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      
      - name: Manual Approval for Production Deploy
        uses: trstringer/manual-approval@v1
        with:
          secret: ${{ secrets.GITHUB_TOKEN }}
          approvers: NZMia
          minimum-approvals: 1
          issue-title: "Approve production deployment"
          issue-body: "Please approve or deny the production deployment"
          exclude-workflow-initiator-as-approver: false
          additional-approved-words: ''
          additional-denied-words: ''

      - name: Deploy to Vercel Production
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}

  # create-release:
  #   runs-on: ubuntu-latest
  #   needs: deploy-production
  #   if: ${{ github.ref == 'refs/heads/main' }}
    
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v4

  #     - name: Create Release
  #       id: create_release
  #       uses: actions/create-release@v1
  #       env:
  #         GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  #       with:
  #         tag_name: v${{ github.run_number }}
  #         release_name: Release v${{ github.run_number }}
  #         draft: false
  #         prerelease: false