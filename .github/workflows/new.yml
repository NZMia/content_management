name: CI/CD Pipeline

on:
  push:
    branches:
      - 'week_*'  
      - main    
    tags:
      - 'v*'   
  pull_request:
    branches:
      - main  

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'

      - name: Install dependencies
        run: npm ci

      - name: Run lint
        run: npm run lint

      - name: Run format check
        run: npm run format

      - name: Run unit test
        run: npm run test

      - name: Check commit message
        uses: wagoid/commitlint-github-action@v6
        with:
          config: 'commitlint.config.cjs'

      - name: Create success file
        if: ${{ success() }}
        run: echo "CI passed" > ci-success.txt

      - name: Upload CI success artifact
        if: ${{ success() }}
        uses: actions/upload-artifact@v4
        with:
          name: ci-success
          path: ./ci-success.txt

  deploy:
    needs: ci
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download CI success artifact
        uses: actions/download-artifact@v4
        with:
          name: ci-success
      - name: Check CI success
        run: test -f ci-success.txt
      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}
          elif [[ ${{ github.event_name }} == 'push' && ${{ startsWith(github.ref, 'refs/tags/v') }} ]]; then
            vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
          fi
      - name: Build Project Artifacts
        run: |
          if [[ ${{ github.event_name }} == 'push' && ${{ startsWith(github.ref, 'refs/tags/v') }} ]]; then
            vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
          else
            vercel build --token=${{ secrets.VERCEL_TOKEN }}
          fi
      - name: Deploy to Vercel
        run: |
          if [[ ${{ github.event_name }} == 'pull_request' ]]; then
            DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
            echo "Preview URL: $DEPLOYMENT_URL"
            echo "preview_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          elif [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            DEPLOYMENT_URL=$(vercel deploy --prebuilt --token=${{ secrets.VERCEL_TOKEN }})
            echo "Pre-Production URL: $DEPLOYMENT_URL"
            echo "pre_production_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          elif [[ ${{ github.event_name }} == 'push' && ${{ startsWith(github.ref, 'refs/tags/v') }} ]]; then
            DEPLOYMENT_URL=$(vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }})
            echo "Production URL: $DEPLOYMENT_URL"
            echo "production_url=$DEPLOYMENT_URL" >> $GITHUB_OUTPUT
          fi